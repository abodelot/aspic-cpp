# Logical not: !
#-------------------------------------------------------------------------------

assert(!false)
assert(! !true)
assert(!"")
assert(! !"a")
assert(!0)

# Less than: <
#-------------------------------------------------------------------------------

assert(1 < 2)
assert(1.5 < 2)
assert(1 < 2.5)
assert("abc" < "def")

# Less than or equal to: <=
#-------------------------------------------------------------------------------

assert(1 <= 1)
assert(1 <= 2)
assert(1.0 <= 2)
assert(1 <= 1.0)
assert("abc" <= "def")
assert("abc" <= "abc")

# Greater than: >
#-------------------------------------------------------------------------------

assert(2 > 1)
assert(2 > 1.5)
assert(2.5 > 2)
assert("def" > "abcd")

# Greater than or equal to: >=
#-------------------------------------------------------------------------------

assert(3 >= 2)
assert(3 >= 3)
assert(3.5 >= 3)
assert(3.5 >= 3.5)
assert(3 >= 2.5)
assert(3.5 >= 2.5)
assert("def" >= "abcd")
assert("a" >= "a")

# Equal: ==
#-------------------------------------------------------------------------------

assert(10 == 10)
assert(10.0 == 10)
assert(10 == 10.0)
assert(10.0 == 10.0)
assert(true == true)
assert(null == null)
assert("foobar" == "foobar")
assert(str_count == str_count)

# Not equal: !=
#-------------------------------------------------------------------------------

assert(1 != 2)
assert(1 != 1.5)
assert(1 != "hello")
assert(1 != true)
assert(1 != null)
assert(1 != str_count)

# Logical or: ||
#-------------------------------------------------------------------------------

assert(true || true)
assert(1 || 2)
assert((1 || 2) == 1)
assert((2 || 1) == 2)
assert(("a" || "b") == "a")
assert(("b" || "a") == "b")
assert((10 || "abc") == 10)
assert(("abc" || 10) == "abc")
assert(str_count || 4 == str_count)
assert(4 || str_count == 4)

assert(true || false)
assert(1 || 0)
assert((1 || 0) == 1)
assert("a" || "")
assert(("a" || "") == "a")

assert(false || true)
assert(0 || 1)
assert((0 || 1) == 1)
assert("" || "a")
assert(("" || "a") == "a")

assert((false || false) == false)
assert((0 || 0) == 0)
assert(("" || "") == "")

# lazy evaluation
assert(1 || assert(false)) # AssertError not raised
assert(1 || "a" > true) # TypeError not raised
x = 10
assert(1 || (x += 2)) # x += not performed
assert(x == 10)


# Logical and: &&
#-------------------------------------------------------------------------------

assert(true && true)
assert(1 && 2)
assert((1 && 2) == 2)
assert((2 && 1) == 1)
assert("a" && "b" == "b")
assert("b" && "a" == "a")
assert(10 && "abc" == "abc")
assert("abc" && 10 == 10)
assert(str_count && 10 == 10)
assert(10 && str_count == str_count)

assert((true && false) == false)
assert((1 && 0) == 0)
assert(("a" && "") == "")

assert((false && true) == false)
assert((0 && 1) == 0)
assert(("" && "a") == "")

assert((false && false) == false)
assert((0 && 0) == 0)
assert(("" && "") == "")

assert(true && false || true)
assert(true || false && false == false)

# lazy evaluation
assert(!(0 && assert(false))) # AssertError not raised
assert(!(false && "a" > 10)) # TypeError not raised
x = 10
assert(!(0 && (x = 5))) # x = not performed
assert(x == 10)
