# + and * operators
assert(" ")
assert("hello" == "hello")
var = "hello"
assert(var == var)
assert(var == "hello")
assert("hello" == var)
assert("hello" == "he" + "l" * 2 + "o")
var2 = "world"
assert(var + " " + var2 == "hello world")

# += and *= operators
var = "my"
var += " string"
assert(var == "my string")
var += ""
assert(var == "my string")
name = "o"
name += "hn"
name = "J" + name
assert(name == "John")
name2 = "Doe"
name += str_replace(name2 + "!", "D", " D")
assert(name == "John Doe!")

# str_len function
name = "alexandre"
assert(str_len(name) == 9)
assert(str_len(name * 2) == 18)
assert(str_len("") == 0)

# str_count function
assert(str_count(name, "a") == 2)
assert(str_count(name, "A") == 0)
assert(str_count(name, "x") == 1)
assert(str_count(name, "xa") == 1)
assert(str_count(name, "xz") == 0)
assert(str_count(name, "z") == 0)

# str_replace function
assert(str_replace("hello", "x", "y") == "hello")
assert(str_replace("hello", "o", "a") == "hella")
assert(str_replace("Hello", "h", "z") == "Hello")
assert(str_replace("foobar foobaz barbaz", "foo", "bar") == "barbar barbaz barbaz")
assert(str_replace("foobar foobaz barbaz", "ar", "") == "foob foobaz bbaz")

# str_trim function
assert(str_trim("") == "")
assert(str_trim("string") == "string")
assert(str_trim("   string") == "string")
assert(str_trim("\tstring") == "string")
assert(str_trim("   string\t") == "string")
assert(str_trim("   string ") == "string")
